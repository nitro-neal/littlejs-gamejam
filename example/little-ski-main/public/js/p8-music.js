// https://codyebberson.github.io/pico8-music/
const CUSTOM_INSTRUMENTS_ENABLED=!0,SOUND_CACHING_ENABLED=!0,FX_NO_EFFECT=0,FX_SLIDE=1,FX_VIBRATO=2,FX_DROP=3,FX_FADE_IN=4,FX_FADE_OUT=5,FX_ARP_FAST=6,FX_ARP_SLOW=7,SAMPLE_RATE=44100,BASE_SPEED=120,audioCtx=new AudioContext;window.P8=function(t,_){const d=t.split("\n"),M=_.split("\n");let a=0;const g=(t,_,a)=>parseInt(t.substr(_,a),16),x=t=>t+.5|0;const p=[t=>Math.abs(2*t-1)-1,t=>{return.5*(t<.9?2*t/.9-1:2*(1-t)/(1-.9)-1)},t=>.6*(t<.5?t:t-1),t=>t<.5?.5:-.5,t=>t<.3?.5:-.5,t=>(t<.5?3-Math.abs(24*t-6):1-Math.abs(16*t-12))/9,()=>{var t=2*Math.random()-1,t=(a+.02*t)/1.02;return 10*(a=t)},(t,_)=>{_=Math.abs(_/128%1*2-1);return(Math.abs(4*((t+.5*_)%1)-2)-Math.abs(8*t-4))/6}],w=t=>65*2**(t/12),E={},e=(t,n)=>{const r=d[t];var S=g(r,2,2),_=S/BASE_SPEED;const a=g(r,4,2),E=g(r,6,2)||32;var e=E*SAMPLE_RATE,t=audioCtx.createBuffer(1,e,SAMPLE_RATE),F=t.getChannelData(0),o=t=>t+1>=E?a:t+1,D=(t,_,a)=>g(r,8+5*t+_,a);let T=0,l=0,s=0,u=24,M=w(24),f=-1,i=-1,X=-1;for(;T<e;){var N=D(s,0,2)+n,R=w(N),h=D(s,2,1),L=D(s,3,1)/8,P=D(s,4,1),C=o(s),v=D(C,0,2)+n,I=D(C,2,1),c=D(C,3,1),C=D(C,4,1);let E=.02,e=((P===FX_FADE_IN||h===f&&(N===u||P===FX_SLIDE)&&0<i&&X!==FX_FADE_OUT)&&(E=0),.05);(P===FX_FADE_OUT||h===I&&(N===v||C===FX_SLIDE)&&0<c&&C!==FX_FADE_IN)&&(e=0);var O=x(_*SAMPLE_RATE),B=CUSTOM_INSTRUMENTS_ENABLED&&7<h&&k(h-8,n+N-24);let A=0;for(let r=T;r<T+O;r++){var U,b=(r-T)/O;let t=1,_=(b<E?t=b/E:b>1-e&&(t=(1-b)/e),R),a=L;P===FX_SLIDE&&(_=(1-b)*M+b*R,0<i)&&(a=(1-b)*i+b*L),P===FX_VIBRATO&&(_*=1+.02*Math.sin(7.5*b)),P===FX_DROP&&(_*=1-b),P===FX_FADE_IN&&(a*=b),P===FX_FADE_OUT&&(a*=1-b),P>=FX_ARP_FAST&&(U=(S<=8?32:16)/(P===FX_ARP_FAST?4:8),U=-4&s|3&(U*b|0),_=w(D(U,0,2)+n)),l+=_/SAMPLE_RATE,h<8?F[r]+=a*t*p[h](l%1,l):CUSTOM_INSTRUMENTS_ENABLED&&(F[r]+=a*t*B[A],A=(A+1)%B.length)}T+=O,u=N,M=R,f=h,i=L,X=P,s=o(s)}return t},k=(_,a)=>{if(SOUND_CACHING_ENABLED){var r=_+"-"+a;let t=E[r];return t||(t=e(_,a),E[r]=t),t}return e(_,a)},f=(t,_,a,r,E=0)=>{var e=k(r,E).getChannelData(0);let A=0;for(;_<a;)t[_]+=e[A],A=(A+1)%e.length,_++},i=(t,_=!1,a=0)=>{var r=audioCtx.createBufferSource();return r.buffer=t,r.loop=_,r.loopStart=a,r.connect(audioCtx.destination),r.start(),r};this.sfx=t=>i(k(t,0)),this.music=a=>{var r=[],E=[];let t=0,e=0,A=M.length-1;for(let _=a;_<=A;_++){var n=M[_],S=g(n,0,2);for(let t=r[_]=0;t<4;t++){var F=g(n,3+2*t,2);if(F<d.length){F=d[F];if(0===g(F,6,2)){r[_]=t;break}}}var o=g(n,3+2*r[_],2),o=d[o],o=g(o,2,2)/BASE_SPEED;if(E[_]=x(32*o*SAMPLE_RATE),1==(1&S)&&(t=e),e+=32*o,2==(2&S)){A=_;break}}var _=SAMPLE_RATE*e,_=audioCtx.createBuffer(1,_,SAMPLE_RATE),D=_.getChannelData(0);let T=0;for(let t=a;t<=A;t++){var l=M[t],s=E[t];for(let t=0;t<4;t++){var u=g(l,3+2*t,2);u<d.length&&f(D,T,T+s,u)}T+=s}return i(_,!0,t)}};
